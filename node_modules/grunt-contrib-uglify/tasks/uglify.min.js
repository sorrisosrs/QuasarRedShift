"use strict";var path=require("path");var chalk=require("chalk");var maxmin=require("maxmin");function relativePath(file1,file2){var file1Dirname=path.dirname(file1);var file2Dirname=path.dirname(file2);if(file1Dirname!==file2Dirname){return path.relative(file1Dirname,file2Dirname)+path.sep}else{return""}}function normalizeLf(string){return string.replace(/\r\n/g,"\n")}module.exports=function(grunt){var uglify=require("./lib/uglify").init(grunt);grunt.registerMultiTask("uglify","Minify files with UglifyJS.",function(){var options=this.options({banner:"",footer:"",compress:{warnings:false},mangle:{},beautify:false,report:"min",expression:false});var banner=normalizeLf(options.banner);var footer=normalizeLf(options.footer);var mapNameGenerator,mapInNameGenerator;this.files.forEach(function(f){var src=f.src.filter(function(filepath){if(!grunt.file.exists(filepath)){grunt.log.warn("Source file "+chalk.cyan(filepath)+" not found.");return false}else{return true}});if(src.length===0){grunt.log.warn("Destination "+chalk.cyan(f.dest)+" not written because src files were empty.");return}if(options.expression&&(options.compress||options.mangle)){grunt.log.warn("Option "+chalk.cyan("expression")+" not compatible with "+chalk.cyan("compress and mangle"));options.compress=false;options.mangle=false}if(typeof options.sourceMapName==="function"){mapNameGenerator=options.sourceMapName}if(typeof options.sourceMapIn==="function"){if(src.length!==1){grunt.fail.warn("Cannot generate `sourceMapIn` for multiple source files.")}mapInNameGenerator=options.sourceMapIn}if(mapNameGenerator){try{options.generatedSourceMapName=mapNameGenerator(f.dest)}catch(e){var err=new Error("SourceMap failed.");err.origError=e;grunt.fail.warn(err)}}else if(!options.sourceMapName){options.generatedSourceMapName=f.dest+".map"}else{options.generatedSourceMapName=options.sourceMapName}if(mapInNameGenerator){try{options.sourceMapIn=mapInNameGenerator(src[0])}catch(e){var err=new Error("SourceMapInName failed.");err.origError=e;grunt.fail.warn(err)}}if(options.sourceMap){var destToSourceMapPath=relativePath(f.dest,options.generatedSourceMapName);var sourceMapBasename=path.basename(options.generatedSourceMapName);options.destToSourceMap=destToSourceMapPath+sourceMapBasename}var result;try{result=uglify.minify(src,f.dest,options)}catch(e){console.log(e);var err=new Error("Uglification failed.");if(e.message){err.message+="\n"+e.message+". \n";if(e.line){err.message+="Line "+e.line+" in "+src+"\n"}}err.origError=e;grunt.log.warn("Uglifying source "+chalk.cyan(src)+" failed.");grunt.fail.warn(err)}var output=result.min+footer;if(!options.sourceMap){output=banner+output}grunt.file.write(f.dest,output);if(options.sourceMap){grunt.file.write(options.generatedSourceMapName,result.sourceMap);grunt.verbose.writeln("File "+chalk.cyan(options.generatedSourceMapName)+" created (source map).")}grunt.verbose.writeln("File "+chalk.cyan(f.dest)+" created: "+maxmin(result.max,output,options.report==="gzip"))})})};