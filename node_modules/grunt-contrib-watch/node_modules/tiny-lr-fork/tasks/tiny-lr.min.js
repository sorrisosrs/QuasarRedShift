var fs=require("fs");var Server=require("..").Server;module.exports=function(grunt){var util=grunt.util||grunt.utils;var _=util._;var server;grunt.registerTask("tinylr-start","Start the tiny livereload server",function(){var options=_.defaults(grunt.config("tiny-lr")||{},{port:35729});changed();var done=this.async();server=new Server;grunt.log.writeln("... Starting server on "+options.port+" ...");server.listen(options.port,this.async())});grunt.registerTask("tinylr-reload","Sends a reload notification to the livereload server, based on `watchFiles.changed`",function(){if(!server)return;var files=changed();grunt.log.verbose.writeln("... Reloading "+grunt.log.wordlist(files)+" ...");server.changed({body:{files:files}})});function changed(){if(grunt.file.watchFiles)return grunt.file.watchFiles.changed;var watch=grunt.config("watch");var files=Object.keys(watch).filter(function(target){var tasks=watch[target].tasks;if(!tasks)return false;return~tasks.indexOf("reload")}).reduce(function(list,target){return list.concat(watch[target].files||[])},[]);files=grunt.file.expandFiles(files).filter(ignore("node_modules"));var stats=changed.stats=changed.stats||{};var current=files.map(function(filepath){var stat=fs.statSync(filepath);stat.file=filepath;return stat}).reduce(function(o,stat){o[stat.file]=stat.mtime.getTime();return o},{});files=Object.keys(current).filter(function(file){if(!stats[file])return true;return stats[file]!==current[file]});changed.stats=current;return files}function ignore(pattern){return function(item){return!~item.indexOf(pattern)}}};