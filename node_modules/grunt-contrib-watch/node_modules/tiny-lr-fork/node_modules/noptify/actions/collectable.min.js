var fs=require("fs");var collectable=module.exports;collectable.stdin=function stdin(force,done){if(!done)done=force,force=false;var argv=this.nopt.argv;var self=this;done=done||function(err){err&&self.emit("error",err)};this._readFromStdin=true;if(!argv){this.once("stdin",done);return this}if(!argv.remain.length||force){this.readStdin(done)}return this};collectable.files=function files(done){var argv=this.nopt.argv;var self=this;done=done||function(err){err&&self.emit("error",err)};if(!argv){this.once("files",done);return this}if(argv.remain.length){this.readFiles(argv.remain,done)}return this};collectable.readStdin=function readStdin(done){var data="";var self=this;process.stdin.setEncoding("utf8");process.stdin.on("error",done);process.stdin.on("data",function(chunk){data+=chunk;self.emit("stdin:data",chunk)}).on("end",function(){self.emit("stdin",null,data);done(null,data)}).resume();return this};collectable.readFiles=function readFiles(filepaths,done){var data="";var self=this;var files=filepaths.slice(0);(function read(file){if(!file){self.emit("files",null,data,filepaths);return done(null,data,filepaths)}fs.readFile(file,"utf8",function(err,body){if(err)return done(err);data+=body;self.emit("files:data",body);read(files.shift())})})(files.shift());return this};collectable.collect=function collect(done){return this.stdin(done).files(done)};