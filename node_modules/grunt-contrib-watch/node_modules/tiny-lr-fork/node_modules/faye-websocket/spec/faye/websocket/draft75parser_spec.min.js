var Draft75Parser=require("../../../lib/faye/websocket/draft75_parser");JS.ENV.Draft75ParserSpec=JS.Test.describe("Draft75Parser",function(){with(this){before(function(){with(this){this.webSocket={dispatchEvent:function(){}};this.parser=new Draft75Parser(webSocket)}});describe("parse",function(){with(this){sharedBehavior("draft-75 parser",function(){with(this){it("parses text frames",function(){with(this){expect(webSocket,"receive").given("Hello");parser.parse([0,72,101,108,108,111,255])}});it("parses multiple frames from the same packet",function(){with(this){expect(webSocket,"receive").given("Hello").exactly(2);parser.parse([0,72,101,108,108,111,255,0,72,101,108,108,111,255])}});it("parses text frames beginning 0x00-0x7F",function(){with(this){expect(webSocket,"receive").given("Hello");parser.parse([102,72,101,108,108,111,255])}});it("ignores frames with a length header",function(){with(this){expect(webSocket,"receive").exactly(0);parser.parse([128,5,72,101,108,108,111])}});it("parses text following an ignored block",function(){with(this){expect(webSocket,"receive").given("Hello");parser.parse([128,2,72,101,0,72,101,108,108,111,255])}});it("parses multibyte text frames",function(){with(this){expect(webSocket,"receive").given("Apple = ");parser.parse([0,65,112,112,108,101,32,61,32,239,163,191,255])}});it("parses frames received in several packets",function(){with(this){expect(webSocket,"receive").given("Apple = ");parser.parse([0,65,112,112,108,101]);parser.parse([32,61,32,239,163,191,255])}});it("parses fragmented frames",function(){with(this){expect(webSocket,"receive").given("Hello");parser.parse([0,72,101,108]);parser.parse([108,111,255])}})}});behavesLike("draft-75 parser");it("does not close the socket if a 76 close frame is received",function(){with(this){expect(webSocket,"close").exactly(0);expect(webSocket,"receive").given("");parser.parse([255,0])}})}});describe("frame",function(){with(this){it("returns the given string formatted as a WebSocket frame",function(){with(this){assertBufferEqual([0,72,101,108,108,111,255],parser.frame("Hello"))}});it("encodes multibyte characters correctly",function(){with(this){assertBufferEqual([0,65,112,112,108,101,32,61,32,239,163,191,255],parser.frame("Apple = "))}})}})}});