var HybiParser=require("../../../lib/faye/websocket/hybi_parser");JS.ENV.HybiParserSpec=JS.Test.describe("HybiParser",function(){with(this){before(function(){with(this){this.webSocket={dispatchEvent:function(){}};this.parser=new HybiParser(webSocket)}});define("parse",function(){var bytes=[];for(var i=0,n=arguments.length;i<n;i++)bytes=bytes.concat(arguments[i]);this.parser.parse(new Buffer(bytes))});define("buffer",function(string){return{equals:function(buffer){return buffer.toString("utf8",0,buffer.length)===string}}});describe("parse",function(){with(this){define("mask",function(){return this._mask=this._mask||[1,2,3,4].map(function(){return Math.floor(Math.random()*255)})});define("maskMessage",function(bytes){var output=[];Array.prototype.forEach.call(bytes,function(b,i){output[i]=bytes[i]^this.mask()[i%4]},this);return output});it("parses unmasked text frames",function(){with(this){expect(webSocket,"receive").given("Hello");parse([129,5,72,101,108,108,111])}});it("parses multiple frames from the same packet",function(){with(this){expect(webSocket,"receive").given("Hello").exactly(2);parse([129,5,72,101,108,108,111,129,5,72,101,108,108,111])}});it("parses empty text frames",function(){with(this){expect(webSocket,"receive").given("");parse([129,0])}});it("parses fragmented text frames",function(){with(this){expect(webSocket,"receive").given("Hello");parse([1,3,72,101,108]);parse([128,2,108,111])}});it("parses masked text frames",function(){with(this){expect(webSocket,"receive").given("Hello");parse([129,133],mask(),maskMessage([72,101,108,108,111]))}});it("parses masked empty text frames",function(){with(this){expect(webSocket,"receive").given("");parse([129,128],mask(),maskMessage([]))}});it("parses masked fragmented text frames",function(){with(this){expect(webSocket,"receive").given("Hello");parse([1,129],mask(),maskMessage([72]));parse([128,132],mask(),maskMessage([101,108,108,111]))}});it("closes the socket if the frame has an unrecognized opcode",function(){with(this){expect(webSocket,"close").given(1002,null,false);parse([131,0])}});it("closes the socket if a close frame is received",function(){with(this){expect(webSocket,"close").given(1e3,"Hello",false);parse([136,7,3,232,72,101,108,108,111])}});it("parses unmasked multibyte text frames",function(){with(this){expect(webSocket,"receive").given("Apple = ");parse([129,11,65,112,112,108,101,32,61,32,239,163,191])}});it("parses frames received in several packets",function(){with(this){expect(webSocket,"receive").given("Apple = ");parse([129,11,65,112,112,108]);parse([101,32,61,32,239,163,191])}});it("parses fragmented multibyte text frames",function(){with(this){expect(webSocket,"receive").given("Apple = ");parse([1,10,65,112,112,108,101,32,61,32,239,163]);parse([128,1,191])}});it("parses masked multibyte text frames",function(){with(this){expect(webSocket,"receive").given("Apple = ");parse([129,139],mask(),maskMessage([65,112,112,108,101,32,61,32,239,163,191]))}});it("parses masked fragmented multibyte text frames",function(){with(this){expect(webSocket,"receive").given("Apple = ");parse([1,138],mask(),maskMessage([65,112,112,108,101,32,61,32,239,163]));parse([128,129],mask(),maskMessage([191]))}});it("parses unmasked medium-length text frames",function(){with(this){expect(webSocket,"receive").given("HelloHelloHelloHelloHelloHelloHelloHelloHelloHelloHelloHelloHelloHelloHelloHelloHelloHelloHelloHelloHelloHelloHelloHelloHelloHelloHelloHelloHelloHelloHelloHelloHelloHelloHelloHelloHelloHelloHelloHello");parse([129,126,0,200,72,101,108,108,111,72,101,108,108,111,72,101,108,108,111,72,101,108,108,111,72,101,108,108,111,72,101,108,108,111,72,101,108,108,111,72,101,108,108,111,72,101,108,108,111,72,101,108,108,111,72,101,108,108,111,72,101,108,108,111,72,101,108,108,111,72,101,108,108,111,72,101,108,108,111,72,101,108,108,111,72,101,108,108,111,72,101,108,108,111,72,101,108,108,111,72,101,108,108,111,72,101,108,108,111,72,101,108,108,111,72,101,108,108,111,72,101,108,108,111,72,101,108,108,111,72,101,108,108,111,72,101,108,108,111,72,101,108,108,111,72,101,108,108,111,72,101,108,108,111,72,101,108,108,111,72,101,108,108,111,72,101,108,108,111,72,101,108,108,111,72,101,108,108,111,72,101,108,108,111,72,101,108,108,111,72,101,108,108,111,72,101,108,108,111,72,101,108,108,111])}});it("parses masked medium-length text frames",function(){with(this){expect(webSocket,"receive").given("HelloHelloHelloHelloHelloHelloHelloHelloHelloHelloHelloHelloHelloHelloHelloHelloHelloHelloHelloHelloHelloHelloHelloHelloHelloHelloHelloHelloHelloHelloHelloHelloHelloHelloHelloHelloHelloHelloHelloHello");parse([129,254,0,200],mask(),maskMessage}});it("replies to pings with a pong",function(){with(this){expect(webSocket,"send").given(buffer("OHAI"),"pong");parse([137,4,79,72,65,73])}})}});describe("frame",function(){with(this){it("returns the given string formatted as a WebSocket frame",function(){with(this){assertBufferEqual([129,5,72,101,108,108,111],parser.frame("Hello"))}});it("encodes multibyte characters correctly",function(){with(this){assertBufferEqual([129,11,65,112,112,108,101,32,61,32,239,163,191],parser.frame("Apple = "))}});it("encodes medium-length strings using extra length bytes",function(){with(this){assertBufferEqual([129,126,0,200,72,101,108,108,111,72,101,108,108,111,72,101,108,108,111,72,101,108,108,111,72,101,108,108,111,72,101,108,108,111,72,101,108,108,111,72,101,108,108,111,72,101,108,108,111,72,101,108,108,111,72,101,108,108,111,72,101,108,108,111,72,101,108,108,111,72,101,108,108,111,72,101,108,108,111,72,101,108,108,111,72,101,108,108,111,72,101,108,108,111,72,101,108,108,111,72,101,108,108,111,72,101,108,108,111,72,101,108,108,111,72,101,108,108,111,72,101,108,108,111,72,101,108,108,111,72,101,108,108,111,72,101,108,108,111,72,101,108,108,111,72,101,108,108,111,72,101,108,108,111,72,101,108,108,111,72,101,108,108,111,72,101,108,108,111,72,101,108,108,111,72,101,108,108,111,72,101,108,108,111,72,101,108,108,111,72,101,108,108,111,72,101,108,108,111,72,101,108,108,111],parser.frame("HelloHelloHelloHelloHelloHelloHelloHelloHelloHelloHelloHelloHelloHelloHelloHelloHelloHelloHelloHelloHelloHelloHelloHelloHelloHelloHelloHelloHelloHelloHelloHelloHelloHelloHelloHelloHelloHelloHelloHello"))}});it("encodes close frames with an error code",function(){with(this){assertBufferEqual([136,7,3,234,72,101,108,108,111],parser.frame("Hello","close",1002))}});it("encodes pong frames",function(){with(this){assertBufferEqual([138,0],parser.frame("","pong"))}})}})}});