"use strict";var path=require("path");var EE=require("events").EventEmitter;var util=require("util");var _=require("lodash");var async=require("async");var reloadTargets=[];var defaultTargetName="_$_default_$_";module.exports=function(grunt){var TaskRun=require("./taskrun")(grunt);var livereload=require("./livereload")(grunt);function Runner(){EE.call(this);this.name="watch";this.options={};this.done=function(){};this.targets=Object.create(null);this.queue=[];this.running=false;this.nospawn=false;this.reload=false;this.nameArgs=[];this.changedFiles=Object.create(null)}util.inherits(Runner,EE);Runner.prototype.init=function init(name,defaults,done){var self=this;self.name=name||grunt.task.current.name||"watch";self.options=self._options(grunt.config([self.name,"options"])||{},defaults||{});self.reload=false;self.nameArgs=grunt.task.current.nameArgs?grunt.task.current.nameArgs:self.name;if(typeof self.options.cwd==="string"){self.options.cwd={files:self.options.cwd,spawn:self.options.cwd}}self.done=done||grunt.task.current.async();var taskLRConfig=grunt.config([self.name,"options","livereload"]);if(self.options.target&&taskLRConfig){var targetLRConfig=grunt.config([self.name,self.options.target,"options","livereload"]);if(targetLRConfig){taskLRConfig=false}}if(taskLRConfig){self.livereload=livereload(taskLRConfig)}var targets=self._getTargets(self.name);if(self.running){self.complete()}else if(reloadTargets.length>0){self.queue=reloadTargets;reloadTargets=[];self.run()}else{self.queue=targets.filter(function(tr){return tr.options.atBegin===true&&tr.tasks.length>0}).map(function(tr){return tr.name});if(self.queue.length>0){self.run()}}return targets};Runner.prototype._getTargets=function _getTargets(name){var self=this;grunt.task.current.requiresConfig(name);var config=grunt.config(name);var onlyTarget=self.options.target?self.options.target:false;var targets=(onlyTarget?[onlyTarget]:Object.keys(config)).filter(function(key){if(key==="options"){return false}return typeof config[key]!=="string"&&!Array.isArray(config[key])}).map(function(target){grunt.task.current.requiresConfig([name,target,"files"]);var cfg=grunt.config([name,target]);cfg.name=target;cfg.options=self._options(cfg.options||{},self.options);self.add(cfg);return cfg},self);if(typeof config.files==="string"||Array.isArray(config.files)){var cfg={files:config.files,tasks:config.tasks,name:defaultTargetName,options:self._options(config.options||{},self.options)};targets.push(cfg);self.add(cfg)}return targets};Runner.prototype._options=function _options(){var args=Array.prototype.slice.call(arguments).concat({cwd:process.cwd(),cliArgs:_.without.apply(null,[[].slice.call(process.argv,2)].concat(grunt.cli.tasks)),interrupt:false,nospawn:false,spawn:true,atBegin:false,event:["all"],target:null});return _.defaults.apply(_,args)};Runner.prototype.run=_.debounce(function run(){var self=this;if(self.queue.length<1){self.running=false;return}self.options=self._options(grunt.config([self.name,"options"])||{},self.options);if(self.running===true){var shouldInterrupt=true;self.queue.forEach(function(name){var tr=self.targets[name];if(tr&&tr.options.interrupt!==true){shouldInterrupt=false;return false}});if(shouldInterrupt===true){self.interrupt()}else{return}}if(self.reload){return self.reloadTask()}self.emit("start");self.running=true;var shouldComplete=true;async.forEachSeries(self.queue,function(name,next){var tr=self.targets[name];if(!tr){return next()}tr.options=self._options(grunt.config([self.name,name,"options"])||{},tr.options,self.options);if(tr.options.spawn===false||tr.options.nospawn===true){shouldComplete=false}tr.run(next)},function(){if(shouldComplete){self.complete()}else{grunt.task.mark().run(self.nameArgs);self.done()}})},250);Runner.prototype.add=function add(target){var self=this;if(!this.targets[target.name||0]){target._getConfig=function(name){var cfgPath=[self.name];if(target.name!==defaultTargetName){cfgPath.push(target.name)}if(name){cfgPath.push(name)}return grunt.config(cfgPath)};var tr=new TaskRun(target);var lrconfig=grunt.config([this.name,target.name||0,"options","livereload"]);if(lrconfig){tr.livereload=livereload(lrconfig)}else if(this.livereload&&lrconfig!==false){tr.livereload=this.livereload}return this.targets[tr.name]=tr}return false};Runner.prototype.complete=function complete(){var self=this;if(self.running===false){return}self.running=false;var time=0;for(var i=0,len=self.queue.length;i<len;++i){var name=self.queue[i];var target=self.targets[name];if(!target){return}if(target.startedAt!==false){time+=target.complete();self.queue.splice(i--,1);len--;if(target.options.livereload&&target.tasks.length<1){time+=1e-4}}}var elapsed=time>0?Number(time/1e3):0;self.changedFiles=Object.create(null);self.emit("end",elapsed)};Runner.prototype._completeQueue=function _completeQueue(){var self=this;self.queue.forEach(function(name){var target=self.targets[name];if(!target){return}target.complete()})};Runner.prototype.interrupt=function interrupt(){var self=this;self._completeQueue();grunt.task.clearQueue();self.emit("interrupt")};Runner.prototype.forever=function forever(){var self=this;function rerun(){self._completeQueue();grunt.task.clearQueue();grunt.task.run(self.nameArgs);self.running=false}grunt.fail.forever_warncount=0;grunt.fail.forever_errorcount=0;grunt.warn=grunt.fail.warn=function(e){grunt.fail.forever_warncount++;var message=typeof e==="string"?e:e.message;grunt.log.writeln(("Warning: "+message).yellow);if(!grunt.option("force")){rerun()}};grunt.fatal=grunt.fail.fatal=function(e){grunt.fail.forever_errorcount++;var message=typeof e==="string"?e:e.message;grunt.log.writeln(("Fatal error: "+message).red);rerun()}};Runner.prototype.clearRequireCache=function(){var filepaths=typeof arguments[0]!=="string"?arguments[0]:Array.prototype.slice(arguments);filepaths.forEach(function(filepath){var abspath=path.resolve(filepath);if(require.cache[abspath]){grunt.verbose.write('Clearing require cache for "'+filepath+'" file...').ok();delete require.cache[abspath]}})};Runner.prototype.reloadTask=function(){var self=this;reloadTargets=self.queue;self.emit("reload",reloadTargets);grunt.task.init([self.name]);self._completeQueue();grunt.task.run(self.nameArgs);self.done()};return new Runner};