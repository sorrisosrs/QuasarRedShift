"use strict";var fs=require("fs");var path=require("path");var util=require("util");var yaml=require("../lib/js-yaml");function Point(x,y,z){this.klass="Point";this.x=x;this.y=y;this.z=z}function Space(height,width,points){if(points){if(!points.every(function(point){return point instanceof Point})){throw new Error("A non-Point inside a points array!")}}this.klass="Space";this.height=height;this.width=width;this.points=points}var pointYamlType=new yaml.Type("!point",{loader:{kind:"array",resolver:function(object){if(3===object.length){return new Point(object[0],object[1],object[2])}else{return yaml.NIL}}},dumper:{kind:"object",instanceOf:Point,representer:function(point){return[point.x,point.y,point.z]}}});var spaceYamlType=new yaml.Type("!space",{loader:{kind:"object",resolver:function(object){return new Space(object.height,object.width,object.points)}},dumper:{kind:"object",instanceOf:Space}});var SPACE_SCHEMA=yaml.Schema.create([spaceYamlType,pointYamlType]);fs.readFile(path.join(__dirname,"custom_types.yaml"),"utf8",function(error,data){var loaded;if(!error){loaded=yaml.load(data,{schema:SPACE_SCHEMA});console.log(util.inspect(loaded,false,20,true))}else{console.error(error.stack||error.message||String(error))}});module.exports.Point=Point;module.exports.Space=Space;module.exports.pointYamlType=pointYamlType;module.exports.spaceYamlType=spaceYamlType;module.exports.SPACE_SCHEMA=SPACE_SCHEMA;