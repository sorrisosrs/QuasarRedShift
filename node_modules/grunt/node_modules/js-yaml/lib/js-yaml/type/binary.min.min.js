"use strict";var NodeBuffer=require("buffer").Buffer;var common=require("../common");var NIL=common.NIL;var Type=require("../type");var BASE64_PADDING="=";var BASE64_BINTABLE=[-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,62,-1,-1,-1,63,52,53,54,55,56,57,58,59,60,61,-1,-1,-1,0,-1,-1,-1,0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,-1,-1,-1,-1,-1,-1,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,-1,-1,-1,-1,-1];var BASE64_CHARTABLE="ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/".split("");function resolveYamlBinary(object){var value,code,idx=0,result=[],leftbits,leftdata;leftbits=0;leftdata=0;for(idx=0;idx<object.length;idx+=1){code=object.charCodeAt(idx);value=BASE64_BINTABLE[code&127];if(10!==code&&13!==code){if(-1===value){return NIL}leftdata=leftdata<<6|value;leftbits+=6;if(leftbits>=8){leftbits-=8;if(BASE64_PADDING!==object.charAt(idx)){result.push(leftdata>>leftbits&255)}leftdata&=(1<<leftbits)-1}}}if(leftbits){return NIL}else{return new NodeBuffer(result)}}function representYamlBinary(object){var result="",index,length,rest;for(index=0,length=object.length-2;index<length;index+=3){result+=BASE64_CHARTABLE[object[index+0]>>2];result+=BASE64_CHARTABLE[((object[index+0]&3)<<4)+(object[index+1]>>4)];result+=BASE64_CHARTABLE[((object[index+1]&15)<<2)+(object[index+2]>>6)];result+=BASE64_CHARTABLE[object[index+2]&63]}rest=object.length%3;if(0!==rest){index=object.length-rest;result+=BASE64_CHARTABLE[object[index+0]>>2];if(2===rest){result+=BASE64_CHARTABLE[((object[index+0]&3)<<4)+(object[index+1]>>4)];result+=BASE64_CHARTABLE[(object[index+1]&15)<<2];result+=BASE64_PADDING}else{result+=BASE64_CHARTABLE[(object[index+0]&3)<<4];result+=BASE64_PADDING+BASE64_PADDING}}return result}module.exports=new Type("tag:yaml.org,2002:binary",{loader:{kind:"string",resolver:resolveYamlBinary},dumper:{kind:"object",instanceOf:NodeBuffer,representer:representYamlBinary}});